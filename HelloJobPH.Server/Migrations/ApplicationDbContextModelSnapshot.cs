// <auto-generated />
using System;
using HelloJobPH.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HelloJobPH.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HelloJobPH.Shared.Model.Applicant", b =>
                {
                    b.Property<int>("ApplicantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicantId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HumanResourceId")
                        .HasColumnType("int");

                    b.Property<int?>("HumanResourcesHumanResourceId")
                        .HasColumnType("int");

                    b.Property<string>("Middlename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("ApplicantId");

                    b.HasIndex("HumanResourcesHumanResourceId");

                    b.HasIndex("UserAccountId")
                        .IsUnique();

                    b.ToTable("Applicant", (string)null);
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateApply")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HumanResourceId")
                        .HasColumnType("int");

                    b.Property<int?>("HumanResourcesHumanResourceId")
                        .HasColumnType("int");

                    b.Property<byte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<int?>("JobPostId")
                        .HasColumnType("int");

                    b.Property<int?>("JobPostingId")
                        .HasColumnType("int");

                    b.Property<string>("ResumeUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("HumanResourcesHumanResourceId");

                    b.HasIndex("JobPostingId");

                    b.ToTable("Application", (string)null);
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.EducationalAttainment", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationId"));

                    b.Property<int?>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsGraduated")
                        .HasColumnType("bit");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearEnded")
                        .HasColumnType("int");

                    b.Property<int?>("YearStarted")
                        .HasColumnType("int");

                    b.HasKey("EducationId");

                    b.HasIndex("ApplicantId");

                    b.ToTable("EducationalAttainment", (string)null);
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.HumanResources", b =>
                {
                    b.Property<int>("HumanResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HumanResourceId"));

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("HumanResourceId");

                    b.HasIndex("UserAccountId")
                        .IsUnique();

                    b.ToTable("HumanResource", (string)null);
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.Interview", b =>
                {
                    b.Property<int>("InterviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterviewId"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int?>("HumanResourceId")
                        .HasColumnType("int");

                    b.Property<string>("Mode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("ScheduledTime")
                        .HasColumnType("time");

                    b.HasKey("InterviewId");

                    b.HasIndex("ApplicationId")
                        .IsUnique()
                        .HasFilter("[ApplicationId] IS NOT NULL");

                    b.HasIndex("HumanResourceId");

                    b.ToTable("Interview", (string)null);
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.JobPosting", b =>
                {
                    b.Property<int>("JobPostingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobPostingId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmploymentType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HumanResourceId")
                        .HasColumnType("int");

                    b.Property<byte>("IsDeleted")
                        .HasColumnType("tinyint");

                    b.Property<int>("JobCategory")
                        .HasColumnType("int");

                    b.Property<string>("JobRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("SalaryFrom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SalaryTo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobPostingId");

                    b.HasIndex("HumanResourceId");

                    b.ToTable("JobPosting", (string)null);
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.PendingRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConfirmationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middlename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PendingRegistration", (string)null);
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.Resume", b =>
                {
                    b.Property<int>("ResumeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResumeId"));

                    b.Property<int?>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("ResumeUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResumeId");

                    b.HasIndex("ApplicantId")
                        .IsUnique()
                        .HasFilter("[ApplicantId] IS NOT NULL");

                    b.ToTable("Resume", (string)null);
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.UserAccount", b =>
                {
                    b.Property<int>("UserAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserAccountId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLoggedIn")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userDetailsId")
                        .HasColumnType("int");

                    b.HasKey("UserAccountId");

                    b.ToTable("UserAccount", (string)null);
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.WorkExperience", b =>
                {
                    b.Property<int>("WorkExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkExperienceId"));

                    b.Property<int?>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.Property<string>("PositionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("WorkExperienceId");

                    b.HasIndex("ApplicantId");

                    b.ToTable("WorkExperience", (string)null);
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.Applicant", b =>
                {
                    b.HasOne("HelloJobPH.Shared.Model.HumanResources", "HumanResources")
                        .WithMany("Applicants")
                        .HasForeignKey("HumanResourcesHumanResourceId");

                    b.HasOne("HelloJobPH.Shared.Model.UserAccount", "UserAccount")
                        .WithOne("Applicant")
                        .HasForeignKey("HelloJobPH.Shared.Model.Applicant", "UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HumanResources");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.Application", b =>
                {
                    b.HasOne("HelloJobPH.Shared.Model.Applicant", "Applicant")
                        .WithMany("Appications")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HelloJobPH.Shared.Model.HumanResources", "HumanResources")
                        .WithMany("Applications")
                        .HasForeignKey("HumanResourcesHumanResourceId");

                    b.HasOne("HelloJobPH.Shared.Model.JobPosting", "JobPosting")
                        .WithMany("Application")
                        .HasForeignKey("JobPostingId");

                    b.Navigation("Applicant");

                    b.Navigation("HumanResources");

                    b.Navigation("JobPosting");
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.EducationalAttainment", b =>
                {
                    b.HasOne("HelloJobPH.Shared.Model.Applicant", "Applicant")
                        .WithMany("EducationalAttainments")
                        .HasForeignKey("ApplicantId");

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.HumanResources", b =>
                {
                    b.HasOne("HelloJobPH.Shared.Model.UserAccount", "UserAccount")
                        .WithOne("HumanResource")
                        .HasForeignKey("HelloJobPH.Shared.Model.HumanResources", "UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.Interview", b =>
                {
                    b.HasOne("HelloJobPH.Shared.Model.Application", "Application")
                        .WithOne("Interview")
                        .HasForeignKey("HelloJobPH.Shared.Model.Interview", "ApplicationId");

                    b.HasOne("HelloJobPH.Shared.Model.HumanResources", "HumanResource")
                        .WithMany("Interviews")
                        .HasForeignKey("HumanResourceId");

                    b.Navigation("Application");

                    b.Navigation("HumanResource");
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.JobPosting", b =>
                {
                    b.HasOne("HelloJobPH.Shared.Model.HumanResources", "HumanResource")
                        .WithMany("JobPostings")
                        .HasForeignKey("HumanResourceId");

                    b.Navigation("HumanResource");
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.Resume", b =>
                {
                    b.HasOne("HelloJobPH.Shared.Model.Applicant", "Applicant")
                        .WithOne("Resume")
                        .HasForeignKey("HelloJobPH.Shared.Model.Resume", "ApplicantId");

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.WorkExperience", b =>
                {
                    b.HasOne("HelloJobPH.Shared.Model.Applicant", "Applicant")
                        .WithMany("WorkExperiences")
                        .HasForeignKey("ApplicantId");

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.Applicant", b =>
                {
                    b.Navigation("Appications");

                    b.Navigation("EducationalAttainments");

                    b.Navigation("Resume");

                    b.Navigation("WorkExperiences");
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.Application", b =>
                {
                    b.Navigation("Interview");
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.HumanResources", b =>
                {
                    b.Navigation("Applicants");

                    b.Navigation("Applications");

                    b.Navigation("Interviews");

                    b.Navigation("JobPostings");
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.JobPosting", b =>
                {
                    b.Navigation("Application");
                });

            modelBuilder.Entity("HelloJobPH.Shared.Model.UserAccount", b =>
                {
                    b.Navigation("Applicant");

                    b.Navigation("HumanResource");
                });
#pragma warning restore 612, 618
        }
    }
}
