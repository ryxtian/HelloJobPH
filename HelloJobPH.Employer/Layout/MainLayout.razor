@inherits LayoutComponentBase

@using Microsoft.AspNetCore.Components.Authorization
@using HelloJobPH.Employer.JwtAuthStateProviders
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager Navigation
@* Required *@
<MudThemeProvider />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row d-flex justify-content-between align-items-center px-4 py-2 bg-light">
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>

            @if (user != null && user.Identity != null && user.Identity.IsAuthenticated)
            {
                <div class="d-flex align-items-center">
                    <MudText Typo="Typo.subtitle1" Class="mr-2">
                        👋 Hello, <b>@fullName</b>
                    </MudText>
                    <MudButton Color="Color.Error" Variant="Variant.Outlined"  OnClick="Logout">
                        Logout
                    </MudButton>
                </div>
            }
        </div>

        <article class="content px-4 py-2">
            @Body
        </article>
    </main>
</div>
@code {
    private ClaimsPrincipal? user;
    private string? fullName;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            var firstName = user.FindFirst(c => c.Type == ClaimTypes.Name)?.Value;
            var lastName = user.FindFirst(c => c.Type == ClaimTypes.Surname)?.Value;
            fullName = $"{firstName} {lastName}";
        }
    }

    private async Task Logout()
    {
        if (AuthProvider is JwtAuthStateProvider jwtAuth)
        {
            await jwtAuth.MarkUserAsLoggedOut();
        }

        Navigation.NavigateTo("/login", true);
    }
}