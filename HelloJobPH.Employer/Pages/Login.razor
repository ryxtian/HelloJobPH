@page "/login"
@layout LandingLayout
@using System.ComponentModel.DataAnnotations
@using HelloJobPH.Employer.Services.Authentication
@using MudBlazor
@inject IAuthService _auth
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<MudContainer MaxWidth="MaxWidth.ExtraSmall" Class="mt-12">
    <MudPaper Elevation="4" Class="pa-6">
        <MudText Typo="Typo.h5" Align="Align.Center" GutterBottom="true" Class="mb-4">
            Welcome Admin
        </MudText>
        <MudDivider Class="mb-4" />

        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <MudTextField @bind-Value="model.Email"
                          Label="Email"
                          Required="true"
                          Variant="Variant.Outlined"
                          Margin="Margin.Dense"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Email"
                          Class="mb-3" />

            <MudTextField @bind-Value="model.Password"
                          Label="Password"
                          InputType="InputType.Password"
                          Required="true"
                          Variant="Variant.Outlined"
                          Margin="Margin.Dense"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Lock"
                          Class="mb-4" />

            <MudButton ButtonType="ButtonType.Submit"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       FullWidth="true"
                       Class="mb-2">
                Login
            </MudButton>
        </EditForm>
    </MudPaper>
</MudContainer>

@code {
    private LoginDtos model = new();

    private async Task OnValidSubmit()
    {
        try
        {
            var response = await _auth.Login(model);

            if (response!=null)
            {
                Snackbar.Add("Login successful!", Severity.Success);
                // TODO: Store token, set auth state
                NavigationManager.NavigateTo("/dashboard"); // Redirect after login
            }
            else
            {
                Snackbar.Add("Invalid email or password.", Severity.Error);
            }
        }
        catch (Exception ex)
        {
           Console.WriteLine($"Login failed");
        }
    }
}
