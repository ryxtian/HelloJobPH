@page "/Recruiter"
@using HelloJobPH.Shared.DTOs
@using MudBlazor

<MudButton OnClick="AddNewRecruiter" Variant="Variant.Filled" Color="Color.Primary" Class="mb-4">Add New Job Post</MudButton>

<MudTable Items="@HumanResources" Filter="FilterFunc1" @bind-SelectedItem="selectedItem1" Hover="true" Elevation="1">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Job Postings</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" />
    </ToolBarContent>

    <HeaderContent>
        <MudTh>Firstname</MudTh>
        <MudTh>Description</MudTh>
        <MudTh>Salary Range</MudTh>
        <MudTh>Date Posted</MudTh>
        <MudTh>Options</MudTh>
    </HeaderContent>

    <RowTemplate>
        <MudTd DataLabel="Title">@context.First</MudTd>
        <MudTd DataLabel="Description">@context.Description</MudTd>
        <MudTd DataLabel="Salary Range">@($"{context.SalaryFrom:C} - {context.SalaryTo:N2}")</MudTd>
        <MudTd DataLabel="Date Posted">@context.PostedDate.ToLocalTime().ToString("MM/dd/yyyy")</MudTd>
        <MudTd DataLabel="Options">
            <MudButton Color="Color.Primary" Variant="Variant.Outlined" OnClick="@(() => OnEdit(context.JobPostingId))" Size="Size.Small">
                Edit
            </MudButton>
            <MudButton Color="Color.Error" Variant="Variant.Outlined" Size="Size.Small" Disabled="@isDeleting" OnClick="@(() => OnDelete(context.JobPostingId))" Class="ml-2">
                Delete
            </MudButton>
        </MudTd>
    </RowTemplate>

    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
@code{
    private string searchString1 = string.Empty;
    private bool isDeleting = false;
    private HumanResourceDtos selectedItem1;
    protected List<JobPostingDtos> JobPostings;
    private bool FilterFunc1(JobPostingDtos element)
    {
        if (string.IsNullOrWhiteSpace(searchString1))
            return true;

        return (element.Title?.Contains(searchString1, StringComparison.OrdinalIgnoreCase) ?? false)
            || (element.Description?.Contains(searchString1, StringComparison.OrdinalIgnoreCase) ?? false)
            || (element.JobRequirements?.Contains(searchString1, StringComparison.OrdinalIgnoreCase) ?? false)
            || $"{element.SalaryFrom} {element.SalaryTo}".Contains(searchString1);
    }
    public void AddNewRecruiter()
    {
        
    }
}