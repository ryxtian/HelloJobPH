@page "/dashboard"
@using HelloJobPH.Employer.JwtAuthStateProviders
@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor
@inject AuthenticationStateProvider AuthProvider
@inject NavigationManager Navigation
@attribute [Authorize]

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-6">
    <MudPaper Class="pa-6 elevation-2 rounded-lg">
        <MudText Typo="Typo.h4" Color="Color.Primary" GutterBottom="true">
            Dashboard Overview
        </MudText>

        <!-- Summary Cards -->
        <MudGrid Spacing="3" Class="mb-6 mt-4">
            <MudItem xs="12" sm="6" md="4">
                <MudCard Class="pa-4 elevation-3 hover-elevate">
                    <MudCardContent>
                        <MudIcon Icon="@Icons.Material.Filled.Work" Color="Color.Primary" Size="Size.Large" />
                        <MudText Typo="Typo.h6" Color="Color.Primary" Class="mt-2">Total Job Posts</MudText>
                        <MudText Typo="Typo.h4" Class="mt-2">@totalJobPosts</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <MudItem xs="12" sm="6" md="4">
                <MudCard Class="pa-4 elevation-3 hover-elevate">
                    <MudCardContent>
                        <MudIcon Icon="@Icons.Material.Filled.Description" Color="Color.Success" Size="Size.Large" />
                        <MudText Typo="Typo.h6" Color="Color.Success" Class="mt-2">Active Applications</MudText>
                        <MudText Typo="Typo.h4" Class="mt-2">@activeApplications</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>

            <MudItem xs="12" sm="6" md="4">
                <MudCard Class="pa-4 elevation-3 hover-elevate">
                    <MudCardContent>
                        <MudIcon Icon="@Icons.Material.Filled.VerifiedUser" Color="Color.Info" Size="Size.Large" />
                        <MudText Typo="Typo.h6" Color="Color.Info" Class="mt-2">Approved Hires</MudText>
                        <MudText Typo="Typo.h4" Class="mt-2">@approvedHires</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>

        <!-- Bar Chart -->
        <MudPaper Elevation="3" Class="pa-4 rounded-lg" Style="height: 420px;">
            <MudText Typo="Typo.h6" GutterBottom="true" Color="Color.Primary">
                Monthly Applications Comparison
            </MudText>

            <MudChart ChartType="ChartType.Bar"
                      Labels="@chartLabels"
                      Class="mt-4"
                      Style="height: 350px; width: 100%;">
                <MudChartSeries Name="2024" Data="@data2024" Color="Color.Primary" />
                <MudChartSeries Name="2025" Data="@data2025" Color="Color.Secondary" />
            </MudChart>
        </MudPaper>
    </MudPaper>
</MudContainer>

@code {
    private ClaimsPrincipal? user;
    private string? fullName;
    private string? email;
    private string? role;
    private string? userId;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            // Extract values from claims
            var firstName = user.FindFirst(c => c.Type == ClaimTypes.Name)?.Value;
            var lastName = user.FindFirst(c => c.Type == ClaimTypes.Surname)?.Value;
            fullName = $"{firstName} {lastName}";
            email = user.FindFirst(c => c.Type == ClaimTypes.Email)?.Value;
            role = user.FindFirst(c => c.Type == ClaimTypes.Role)?.Value;
            userId = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
        }
        else
        {
            Navigation.NavigateTo("/login", true);
        }
    }
    // Fake dashboard data (replace with API data later)
    private int totalJobPosts = 42;
    private int activeApplications = 18;
    private int approvedHires = 9;

    private string[] chartLabels = { "Jan", "Feb", "Mar", "Apr", "May", "Jun" };
    private double[] data2024 = { 10, 20, 15, 25, 18, 30 };
    private double[] data2025 = { 14, 25, 20, 32, 21, 35 };

    private async Task Logout()
    {
        if (AuthProvider is JwtAuthStateProvider jwtAuth)
            await jwtAuth.MarkUserAsLoggedOut();

        Navigation.NavigateTo("/login", true);
    }
}
